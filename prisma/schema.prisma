generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  name          String
  email         String         @unique
  phone         String
  profile_image String
  type          User_Type      @default(USER)
  password      String
  person_type   String?
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  Company       Company?
  Property      Property?
  User_Adress   User_Adress?
  Visited_Page  Visited_Page[]
}

model User_Adress {
  id         String   @id @default(uuid())
  street     String
  complement String
  district   String
  city       String
  state      String
  country    String
  zip_code   String
  user_id    String   @unique
  street_n   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  User       User     @relation(fields: [user_id], references: [id])
}

model Company {
  id                      String                   @id @default(uuid())
  name                    String
  profile_image           String
  phone                   String
  email                   String
  user_id                 String                   @unique
  created_at              DateTime                 @default(now())
  updated_at              DateTime                 @updatedAt
  type                    String
  User                    User                     @relation(fields: [user_id], references: [id])
  Physical_Person_Company Physical_Person_Company?
  Legal_Person_Company    Legal_Person_Company?
  Property                Property[]
  Owner                   Owner[]
}

model Physical_Person_Company {
  company_id String  @id
  Company    Company @relation(fields: [company_id], references: [id])
  cpf        String
  creci      String

  @@unique([company_id])
}

model Legal_Person_Company {
  company_id String  @id
  Company    Company @relation(fields: [company_id], references: [id])
  cnpj       String
  creci_j    String

  @@unique([company_id])
}

model Property {
  id                    String   @id @default(uuid())
  id_extern             String?
  title                 String
  description           String
  type                  String
  property_registration String?
  condominium           Decimal? @db.Decimal(10, 2)
  iptu                  Decimal? @db.Decimal(10, 2)
  owner_id              String
  company_id            String
  constructed_area      String?
  total_area            String?
  sell_price            Decimal? @db.Decimal(10, 2)
  rent_price            Decimal? @db.Decimal(10, 2)
  objective             String?
  n_bedrooms            Int?
  n_suites              Int?
  n_bathrooms           Int?
  n_parking             Int?
  n_parking_free        Int?
  n_washrooms           Int?
  n_elevators           Int?
  n_paviments           Int?
  link_tour             String?
  user_id               String   @unique
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt
  User                  User     @relation(fields: [user_id], references: [id])
  Company               Company  @relation(fields: [company_id], references: [id])
  Owner                 Owner    @relation(fields: [owner_id], references: [id])
}

enum User_Type {
  USER
  ADMIN
}

model Visited_Page {
  user_id   String  @id
  dashboard Boolean @default(false)
  User      User    @relation(fields: [user_id], references: [id])

  @@unique([user_id])
}

model Owner {
  id         String  @id @default(uuid())
  name       String
  email      String?
  phone      String?
  company_id String

  Company  Company    @relation(fields: [company_id], references: [id])
  Property Property[]
}
